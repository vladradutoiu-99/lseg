name: 'Build and Deploy to GKE'

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: 'spiritual-oxide-435516-u4'
  LOCATION: 'europe-west3'
  REPOSITORY: 'docker-images'

jobs:
  setup-build-publish-deploy:
    name: Publish
    runs-on: 'ubuntu-latest'
    environment: 'production'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: "actions/checkout@v3"

      - id: auth
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_CLUSTER }}"

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Use gcloud CLI
        run: "gcloud info"

      - name: Docker auth
        run: |-
          gcloud auth configure-docker ${{ env.LOCATION }}-docker.pkg.dev --quiet

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            stock_service:
              - 'services/stock_service/**'

      - name: List files
        if: steps.filter.outputs.stock_service == 'true'
        run: ls -R

      - name: Build image
        if: steps.filter.outputs.stock_service == 'true'
        run: docker build . --file ./Dockerfile --tag ${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/stock_service:latest
        working-directory: ./services/stock_service

      - name: Push image
        if: steps.filter.outputs.stock_service == 'true'
        run: docker push ${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/stock_service:latest

      - name: Deploy
        if: steps.filter.outputs.stock_service == 'true'
        run: |-
          gcloud components install kubectl
          gcloud components update
          gcloud container clusters get-credentials test-cluster-2 --zone europe-west3 --project ${{ env.PROJECT_ID }}

          kubectl -n default set image deployment/stock-service-deployment stock-service-container=${{ env.LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/stock_service:latest